diff --git a/src/platform/mpfs_hal/startup_gcc/mss_entry.S b/src/platform/mpfs_hal/startup_gcc/mss_entry.S
index 9e049de..e07ae56 100644
--- a/src/platform/mpfs_hal/startup_gcc/mss_entry.S
+++ b/src/platform/mpfs_hal/startup_gcc/mss_entry.S
@@ -55,7 +55,7 @@ _start:
     csrw medeleg, 0
 .skip_e51:
     # mscratch must be init to zero- we are not using scratch memory
-    csrw mscratch, zero
+   #csrw mscratch, zero
     csrw mcause, zero
     csrw mepc, zero
     /*
diff --git a/src/platform/mpfs_hal/startup_gcc/system_startup.c b/src/platform/mpfs_hal/startup_gcc/system_startup.c
index accd9ea..6bad203 100644
--- a/src/platform/mpfs_hal/startup_gcc/system_startup.c
+++ b/src/platform/mpfs_hal/startup_gcc/system_startup.c
@@ -456,7 +456,7 @@ __attribute__((weak)) uint8_t init_mem_protection_unit(void)
  */
 __attribute__((weak)) uint8_t init_pmp(uint8_t hart_id)
 {
-    pmp_configure(hart_id);
+  //pmp_configure(hart_id);
     return (0U);
 }
 
diff --git a/src/platform/platform_config_reference/linker/mpfs-envm.ld b/src/platform/platform_config_reference/linker/mpfs-envm.ld
index 62632ad..0d74775 100644
--- a/src/platform/platform_config_reference/linker/mpfs-envm.ld
+++ b/src/platform/platform_config_reference/linker/mpfs-envm.ld
@@ -100,7 +100,7 @@ MEMORY
     /* eNVM can be made into 128K section or split as required */
     /* In this example, our reset vector is set to point to the */
     /* start of SEC2 at  0x20220000. */
-    eNVM_SEC_2_0_1_3 (rx) : ORIGIN  = 0x20220000, LENGTH = 128k
+    eNVM_SEC_2_0_1_3 (rx) : ORIGIN  = 0x20222000, LENGTH = 18K /* -Os */
     ram_LIM (rwx) : ORIGIN  = 0x08000000, LENGTH = 1024k
     ram_dtm (rwx) : ORIGIN  = 0x01000000, LENGTH = 7k       /* DTIM */
     scratchpad(rwx):  ORIGIN = 0x0A000000, LENGTH = 512k
diff --git a/src/platform/platform_config_reference/linker/mpfs-lim.ld b/src/platform/platform_config_reference/linker/mpfs-lim.ld
index bdba0fa..0366c45 100644
--- a/src/platform/platform_config_reference/linker/mpfs-lim.ld
+++ b/src/platform/platform_config_reference/linker/mpfs-lim.ld
@@ -102,7 +102,7 @@ MEMORY
     eNVM_SEC2 (rx) : ORIGIN  = 0x20220000, LENGTH = 8k
     eNVM_SEC0_1_3 (rx) : ORIGIN  = 0x20222000, LENGTH = 120k
     /* LIM - we place code here in this example */
-    ram (rwx) :     ORIGIN  = 0x08000000, LENGTH = 1024k
+    ram (rwx) :     ORIGIN  = 0x08020000, LENGTH = 1024k-0x20000
     ram_DTIM (rwx) : ORIGIN  = 0x01000000, LENGTH = 7k
     scratchpad(rwx):  ORIGIN = 0x0A000000, LENGTH = 512k
     /* This 1k of DTIM is used to run code when switching the eNVM clock */
@@ -140,7 +140,7 @@ SECTIONS
 {
 
 /* text: test code section */
-  . = 0x08000000;
+
   .text : ALIGN(0x10)
   {
     __text_load = LOADADDR(.text);
diff --git a/src/platform/platform_config_reference/mpfs_hal_config/mss_sw_config.h b/src/platform/platform_config_reference/mpfs_hal_config/mss_sw_config.h
index 3abed6b..1343b16 100644
--- a/src/platform/platform_config_reference/mpfs_hal_config/mss_sw_config.h
+++ b/src/platform/platform_config_reference/mpfs_hal_config/mss_sw_config.h
@@ -46,7 +46,7 @@
 #endif
 
 #ifndef MPFS_HAL_LAST_HART
-#define MPFS_HAL_LAST_HART   4
+#define MPFS_HAL_LAST_HART   0
 #endif
 
 /*------------------------------------------------------------------------------
@@ -117,8 +117,8 @@
 /*
  * If not using item, comment out line below
  */
-#define SGMII_SUPPORT
-#define DDR_SUPPORT
+//#define SGMII_SUPPORT /* Hex Five */
+//#define DDR_SUPPORT /* Hex Five */
 #define MSSIO_SUPPORT
 //#define SIMULATION_TEST_FEEDBACK
 //#define E51_ENTER_SLEEP_STATE
