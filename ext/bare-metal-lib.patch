diff --git a/src/platform/mpfs_hal/common/nwc/mss_pll.c b/src/platform/mpfs_hal/common/nwc/mss_pll.c
index 202b96f..c86bbd7 100644
--- a/src/platform/mpfs_hal/common/nwc/mss_pll.c
+++ b/src/platform/mpfs_hal/common/nwc/mss_pll.c
@@ -216,7 +216,7 @@ static void mss_mux_pre_mss_pll_config(void)
  * eNVM as it will do as we approach the return instruction
  * The mb() makes sure order of processing is not changed by the compiler
  ******************************************************************************/
-__attribute__((section(".ram_codetext"))) \
+__attribute__((section(".ram_codetext"), optimize("O0"))) \
         static void mss_mux_post_mss_pll_config(void)
 {
    /*
diff --git a/src/platform/mpfs_hal/startup_gcc/system_startup.c b/src/platform/mpfs_hal/startup_gcc/system_startup.c
index accd9ea..5864d3d 100644
--- a/src/platform/mpfs_hal/startup_gcc/system_startup.c
+++ b/src/platform/mpfs_hal/startup_gcc/system_startup.c
@@ -93,6 +93,9 @@ __attribute__((weak)) int main_first_hart(void)
 #ifdef  MPFS_HAL_HW_CONFIG
         /* main hart init's the PLIC */
         PLIC_init_on_reset();
+
+	asm("la ra, 0x202205f2; jr (ra)"); // CG
+
         /*
          * Start the other harts. They are put in wfi in entry.S
          * When debugging, harts are released from reset separately,
diff --git a/src/platform/platform_config_reference/linker/mpfs-envm.ld b/src/platform/platform_config_reference/linker/mpfs-envm.ld
index 62632ad..0d74775 100644
--- a/src/platform/platform_config_reference/linker/mpfs-envm.ld
+++ b/src/platform/platform_config_reference/linker/mpfs-envm.ld
@@ -100,7 +100,7 @@ MEMORY
     /* eNVM can be made into 128K section or split as required */
     /* In this example, our reset vector is set to point to the */
     /* start of SEC2 at  0x20220000. */
-    eNVM_SEC_2_0_1_3 (rx) : ORIGIN  = 0x20220000, LENGTH = 128k
+    eNVM_SEC_2_0_1_3 (rx) : ORIGIN  = 0x20222000, LENGTH = 18K /* -Os */
     ram_LIM (rwx) : ORIGIN  = 0x08000000, LENGTH = 1024k
     ram_dtm (rwx) : ORIGIN  = 0x01000000, LENGTH = 7k       /* DTIM */
     scratchpad(rwx):  ORIGIN = 0x0A000000, LENGTH = 512k
